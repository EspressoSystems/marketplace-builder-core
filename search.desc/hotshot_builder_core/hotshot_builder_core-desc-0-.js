searchState.loadedDescShard("hotshot_builder_core", 0, "References to the parent block that is extended to spawn …\nWaitAndKeep is a helper enum that allows for the lazy …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nResponse Message to be put on the response channel\nDA Proposal Message to be put on the da proposal channel\nDecide Message to be put on the decide channel\nUnifies the possible messages that can be received by the …\nQuorum proposal message to be put on the quorum proposal …\nRequest Message to be put on the request channel\nResponse Message to be put on the response channel\nEnum to hold the status out of the decide event\nEnum to hold the different sources of the transaction\nallow_empty_block_until is a variable that dictates the …\nconstant fee that the builder will offer per byte of data …\nlocally spawned builder Commitements\nda_proposal_payload_commit to (da_proposal, node_count)\nda proposal receiver\ndecide receiver\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nglobal state handle, defined in the service.rs\nRecent included txs set while building blocks\nExpiring txs to be garbage collected\nOld txs to be garbage collected\ninstance state to enfoce max_block_size\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntimeout for maximising the txns in the block\ntime of next garbage collection for txns\nSpawned-from references to the parent block.\nquorum_proposal_payload_commit to quorum_proposal\nquorum proposal receiver\nchannel receiver for the block requests\ntotal nodes required for the VID computation as part of …\nfiltered queue of available transactions, taken from …\nincoming stream of transactions\ntxn garbage collection every duration time\ntxns currently in the tx_queue\nvalidated state that is required for a proposal to be …\nThe channel is empty and closed.\nThe channel is empty and closed.\nThe channel is empty but not closed.\nGlobalState represents the internalized state of the …\nThe channel has overflowed since the last element was …\nThe channel has overflowed since the last element was …\nReceivedTransaction represents receipt information …\nAn error returned from <code>Receiver::recv()</code>.\nAn error returned from <code>Receiver::try_recv()</code>.\nCreate a new broadcast channel.\nReturns the public key of the builder\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the channel is empty and closed.\nReturns <code>true</code> if the channel is empty but not closed.\nReturns <code>true</code> if this error indicates the receiver missed …\n[new] creates a new GlobalState with the given parameters. …\n[register_builder_state] associates the given …\n[remove_handles] cleans up the GlobalState by removing all …\n[update_global_state] Ensures that the given BuildBlockInfo…")